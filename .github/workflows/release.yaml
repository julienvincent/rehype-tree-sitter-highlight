name: Release
on:
  push:
permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      matrix:
        include:
        - arch: linux-amd64
          target: aarch64-unknown-linux-gnu
          runs-on: ubuntu-24.04-arm
        - arch: linux-arm64
          target: x86_64-unknown-linux-gnu
          runs-on: ubuntu-24.04
        - arch: macos-amd64
          target: x86_64-apple-darwin
          runs-on: macos-15-intel
        - arch: macos-arm64
          target: aarch64-apple-darwin
          runs-on: macos-15
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      
      - name: Install just
        uses: extractions/setup-just@v1
      
      - name: Build
        run: |
          just build-and-copy-lib release ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: highlight-${{ matrix.target }}
          if-no-files-found: error
          path: ./**/*/index.node

  # test:
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     
  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #     
  #     - name: Install just
  #       uses: extractions/setup-just@v1
  #
  #     - uses: pnpm/action-setup@v4
  #       with:
  #         version: 10
  #     
  #     - name: Build
  #       run: |
  #         just build-and-copy-lib
  #
  #     - name: Install Dependencies
  #       run: pnpm install --frozen-lockfile
  #
  #     - name: Run Tests
  #       run: |
  #         just download-test-fixtures
  #         just test

  release:
    runs-on: ubuntu-24.04
    needs:
    - build
    # - test
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Dylib Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: true

      - uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run -r build

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "@julienvincent:registry=https://registry.npmjs.org/" >> ~/.npmrc
          pnpm publish -r --no-git-checks --access public
